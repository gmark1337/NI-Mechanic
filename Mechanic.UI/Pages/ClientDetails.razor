@page "/client/{id}"
@using Mechanic.UI.Services
@using Mechanic.Shared;
@inject IClientService ClientService
@inject NavigationManager NavigationManager

<h3>Client Details</h3>
@if (_client is not null)
{
	<ClientForm Client="_client" OnValidSubmit="UpdateAsync" ButtonText="Update client"/>

	<button class=" btn btn-danger" @onclick="DeleteAsync">Delete client</button>
}
else
{
	<p>Loading...</p>
}
@code {
	private Client _client;

	[Parameter]
	public string Id { get; set; }

	protected override async Task OnInitializedAsync(){
		_client = await ClientService.GetClientAsync(Id);
	}

	private async Task DeleteAsync(){
		await ClientService.DeleteClientAsync(Id);
		NavigationManager.NavigateTo("/client");
	}

	private async Task UpdateAsync(){
		await ClientService.UpdateClientAsync(Id, _client);
		NavigationManager.NavigateTo("/client");
	}
}
