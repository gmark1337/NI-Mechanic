@using Mechanic.Shared;

<EditForm Model="Client" OnValidSubmit="OnValidSubmit">
	<DataAnnotationsValidator/>
	<ValidationSummary/>

    @* FOR TEST PURPOSES ONLY 
	<div class="mb-3">
		<label class="form-control-plaintext" >Client ID</label>
		<InputText @bind-Value="Client.Id" class="@("cursor-disabled")" disabled ="@IsDisabled"/>
		<ValidationMessage For="() => Client.Id" />
	</div>
    *@
	<div class="mb-3">
		<label class="form-label">Name</label>
		<InputText @bind-Value="Client.Name" class="form-control" />
		<ValidationMessage For="() => Client.Name" />
	</div>
	<div class="mb-3">
		<label class="form-label">Email</label>
		<InputText type="email" @bind-Value="Client.Email" class="form-control" />
		<ValidationMessage For="() => Client.Email" />
	</div>
	<div class="mb-3">
		<label class="form-label">Address</label>
		<InputText @bind-Value="Client.Address" class="form-control" />
		<ValidationMessage For="() => Client.Address" />
	</div>

    <div class="mb-3">
        <label class="form-label">Jobs</label>

        @foreach (var job in Client.jobs)
        {
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">Job Details</h5>

                    <div class="mb-3">
                        <label class="form-label">License Plate</label>
                        <InputText @bind-Value="job.licensePlate" class="form-control" />
                        <ValidationMessage For="@(() => job.licensePlate)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Manufacturing Year</label>
                        <InputNumber @bind-Value="job.manufacturingYear" class="form-control" />
                        <ValidationMessage For="@(() => job.manufacturingYear)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Job Description</label>
                        <InputText @bind-Value="job.description" class="form-control" />
                        <ValidationMessage For="@(() => job.description)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Work Category</label>
                        <InputSelect @bind-Value="job.workCategory" class="form-control">
                            @foreach (workCategory category in Enum.GetValues(typeof(workCategory)))
                            {
                                <option value="@category">@category</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => job.workCategory)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Work Status</label>
                        <InputSelect @bind-Value="job.status" class="form-control">
                            @foreach (workStage stage in Enum.GetValues(typeof(workStage)))
                            {
                                <option value="@stage">@stage</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => job.status)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Severity</label>
                        <InputNumber @bind-Value="job.severity" class="form-control" />
                        <ValidationMessage For="@(() => job.severity)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Working Hours</label>
                        <input type="text" class="form-control" value="@job.estimatedHours" readonly />
                    </div>
                    
                </div>
            </div>
        }
    </div>


	<button type="submit" class="btn btn-primary">@ButtonText</button>
</EditForm>


@code {
	[Parameter]
	public Client Client { get; set; }

	[Parameter]
	public Func<Task> OnValidSubmit{ get; set; }

	[Parameter]
	public string ButtonText{ get; set; }

	protected bool IsDisabled { get; set; }
}
